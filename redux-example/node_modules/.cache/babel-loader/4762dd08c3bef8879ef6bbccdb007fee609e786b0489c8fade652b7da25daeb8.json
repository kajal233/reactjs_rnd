{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n// const counterReducer=(state=initialState,action)=>\n// {\n//     if (action.type==='increment') {\n//       return{\n//         counter:state.counter + 1,\n//         showCounter:state.showCounter\n//       };\n//     }\n//     if (action.type==='increase') {\n//         return{\n//           counter:state.counter + action.amount,\n//           showCounter:state.showCounter\n//         };\n//       }\n//     if (action.type==='decrement') {\n//         return{\n//           counter:state.counter - 1,\n//           showCounter:state.showCounter\n//         };\n//       }\n//       if (action.type==='toggle') {\n//         return{\n//           showCounter: !state.showCounter,\n//           counter: state.counter\n//         };\n//       }\n//       return state;\n// };\nconst store = createStore(counterSlice.reducer);\nexport default store;","map":{"version":3,"names":["createStore","createSlice","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","amount","toggleCounter","store","reducer"],"sources":["D:/MyProjects/ReactjsRND/redux-example/src/store/index.js"],"sourcesContent":["import {createStore} from 'redux';\r\nimport {createSlice} from '@reduxjs/toolkit';\r\nconst initialState={counter:0,showCounter:true};\r\n\r\nconst counterSlice=createSlice({\r\n    name:'counter',\r\n    initialState,\r\n    reducers:{\r\n        increment(state){\r\n            state.counter++;\r\n        },\r\n        decrement(state){\r\n            state.counter--;\r\n        },\r\n        increase(state,action){\r\n            state.counter=state.counter + action.amount;\r\n        },\r\n        toggleCounter(state){\r\n            state.showCounter=!state.showCounter;\r\n        }\r\n\r\n    }\r\n});\r\n\r\n// const counterReducer=(state=initialState,action)=>\r\n// {\r\n//     if (action.type==='increment') {\r\n//       return{\r\n//         counter:state.counter + 1,\r\n//         showCounter:state.showCounter\r\n//       };\r\n//     }\r\n//     if (action.type==='increase') {\r\n//         return{\r\n//           counter:state.counter + action.amount,\r\n//           showCounter:state.showCounter\r\n//         };\r\n//       }\r\n//     if (action.type==='decrement') {\r\n//         return{\r\n//           counter:state.counter - 1,\r\n//           showCounter:state.showCounter\r\n//         };\r\n//       }\r\n//       if (action.type==='toggle') {\r\n//         return{\r\n//           showCounter: !state.showCounter,\r\n//           counter: state.counter\r\n//         };\r\n//       }\r\n//       return state;\r\n// };\r\nconst store=createStore(counterSlice.reducer);\r\n\r\nexport default store;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,OAAO;AACjC,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,MAAMC,YAAY,GAAC;EAACC,OAAO,EAAC,CAAC;EAACC,WAAW,EAAC;AAAI,CAAC;AAE/C,MAAMC,YAAY,GAACJ,WAAW,CAAC;EAC3BK,IAAI,EAAC,SAAS;EACdJ,YAAY;EACZK,QAAQ,EAAC;IACLC,SAASA,CAACC,KAAK,EAAC;MACZA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDO,SAASA,CAACD,KAAK,EAAC;MACZA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDQ,QAAQA,CAACF,KAAK,EAACG,MAAM,EAAC;MAClBH,KAAK,CAACN,OAAO,GAACM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,MAAM;IAC/C,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAC;MAChBA,KAAK,CAACL,WAAW,GAAC,CAACK,KAAK,CAACL,WAAW;IACxC;EAEJ;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMW,KAAK,GAACf,WAAW,CAACK,YAAY,CAACW,OAAO,CAAC;AAE7C,eAAeD,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}